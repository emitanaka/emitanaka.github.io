<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Emi Tanaka</title>
    <link>/post/</link>
    <description>Recent content in Posts on Emi Tanaka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018-2020</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +1100</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Travel Schedule 2019: Building an interactive visualisation as twitter card</title>
      <link>/post/travel2019/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/travel2019/</guid>
      <description>Making an interactive schedule heat map with interactive twitter card display.</description>
    </item>
    
    <item>
      <title>Making a Hexagon Sticker</title>
      <link>/post/hexsticker/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +1000</pubDate>
      
      <guid>/post/hexsticker/</guid>
      <description>Making hexagon stickers have become popular for R-packages with the range of packages associated with RStudio, such as &lt;code&gt;ggplot2&lt;/code&gt;, &lt;code&gt;knitr&lt;/code&gt;, &lt;code&gt;devtools&lt;/code&gt; and so on, having its own hex stickers. For the sticker that I made for my R-package &lt;a href=&#34;https://github.com/emitanaka/shinycustomloader&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;shinycustomloader&lt;/code&gt;&lt;/a&gt;, I found it easier, partly due to its long name, to use powerpoint to manipulate the image and create a semi-circular text. It took longer than what I had hoped to get the hexagon shape right. You may like to save your own time by &lt;strong&gt;downloading my powerpoint template&lt;/strong&gt; &lt;a href=&#34;hexsticker.pptx&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; as a base to make your own.</description>
    </item>
    
  </channel>
</rss>