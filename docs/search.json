[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "News",
    "section": "",
    "text": "Tweets by statsgen"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#making-your-own-title-slide",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#making-your-own-title-slide",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Making your own title slide",
    "text": "Making your own title slide\nBoth xaringan and Quarto revealjs slides create a default title slide if you supply the title in the YAML.\nxaringan\nIn xaringan, you can disable this by using seal: false.\nQuarto revealjs\nFor Quarto revealjs, replace the title: with pagetitle: in the YAML or alternatively do not include title in the YAML. The benefit of the former approach is that the metadata for the title is automatically created for you in the HTML output.\n---\npagetitle: \"My title\"\n---"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#starting-a-new-slide",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#starting-a-new-slide",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Starting a new slide",
    "text": "Starting a new slide\nxaringan\nIn xaringan, a new slide is started by separating the content with --- in a new line where care needs to be taken not to have spaces after it.\nQuarto revealjs\nIn Quarto revealjs slides, there are two primary ways to start a new slide:\n\n--- just like in xaringan and\na first or second level header, i.e. a line starting with # or ##."
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#shortcut-for-div-and-span-with-css-classes",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#shortcut-for-div-and-span-with-css-classes",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Shortcut for div and span with CSS classes",
    "text": "Shortcut for div and span with CSS classes\nxaringan\nIn xaringan, div element with content, say “My content.”, and CSS class, say myclass, are created with\n.myclass[\nMy content.\n]\nThe above when processed by remark.js becomes:\n<div class=\"myclass\">\nMy content.\n</div>\nSimilary for span element, the shortcut in xaringan is:\n.myclass[My content.]\nwhich becomes\n<span class=\"myclass\">My content.</span>\nThe difference between the two being that there is a new line required before the ] for the div element.\nQuarto revealjs\nIn Quarto revealjs slides, the shortcut for the div and span elements are (I believe) from native Pandoc divs and spans. This was actually one of the biggest reasons I wanted to switch from xaringan. All Rmd documents support Pandoc divs and spans except in xaringan where the markdown content is processed by remark.js instead of Pandoc. The lack of consistency even made me write my own naive javascript to mimic Pandoc div and span for xaringan, but I still wanted the native support.\nSo you can create a div element in Quarto revealjs by:\n::: myclass\n\nMy content.\n\n:::\nor equivalently,\n::: {.myclass}\n\nMy content.\n\n:::\nIn fact, it’s not limited to CSS classes but ids as well. E.g.\n::: {#myid}\n\nMy content.\n\n:::\nis the same as\n<div id=\"myid\">\nMy content.\n</div>\nFor a span element in Quarto revealjs, it will be like below\n[My content.]{.myclass}\nwhere this is equivalent to below:\n<span class=\"myclass\">My content.</span>"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#slide-css-classes",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#slide-css-classes",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Slide CSS classes",
    "text": "Slide CSS classes\nxaringan\nIn xaringan, a CSS class maybe specified to the whole slide by:\nclass: myclass\nI used this sometimes to define a slide with different background colors.\nQuarto revealjs\nThe HTML layout for revealjs slides is actually quite different to the layout for remarkjs slides. I won’t go into too much details this time, but the main thing is that a slide content is written within <section></section> and separate to this is a background element and other div (like footer and slide numbers). The latter elements are not nested within the slide itself, which makes the concept of applying the CSS class to the whole slide different in revealjs compared to xaringan/remarkjs.\nTo apply a CSS class to a slide with no title, you can do below:\n## {.myclass}\nand if you have a title, just write the title first before defining the class like below:\n## My title {.myclass}\nIf you want to apply it to the slide background then only specific attributes work, e.g. below changes the background color of the slide to red:\n## {background-color=\"red\"}"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#columns",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#columns",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Columns",
    "text": "Columns\nxaringan\nIf you used the default xaringan, you may have used .left[] and .right[] to make two columns. These actually are setting the attributes of the elements to float: left; and float:right;, respectively, with width: 48%;.\nQuarto revealjs\nFor multiple columns in Quarto revealjs, you can set something like below to make two columns, one with 40% width and the other with 60% width.\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nLeft column\n:::\n\n::: {.column width=\"60%\"}\nRight column\n:::\n\n::::\nYou can find more details here."
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#incremental-slides",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#incremental-slides",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Incremental slides",
    "text": "Incremental slides\nBy incremental slides, I mean slides where you want to reveal the content of slide one at a time without rewriting separate slides with the same past content.\nxaringan\nIn xaringan, you can use --. You can also use {{content}} to specify where the new content after -- will be inserted. E.g.\nSlide 1 \n\n--\n\n{{content}}\n\nThis content will only appear in next slide below \"Slide 1\".\n\n--\n\nThis content will appear on top of the last sentence but below \"Slide 1\".\n\nQuarto revealjs\nThe -- in xaringan is the same as the . . . (three dots separated by spaces) in Quarto revealjs.\n\nSlide 1 \n\nFirst content\n\n. . . \n\nSecond content after pause\n\nA similar feat to {{content}} in xaringan can be achieved by using fragments in Quarto revealjs, like below:\n\nSlide 1 \n\n::: {.fragment fragment-index=2}\nThis content will appear on top of the last sentence but below \"Slide 1\".\n:::\n\n::: {.fragment fragment-index=1}\nThis content will only appear in next slide below \"Slide 1\".\n:::\n\nYou can find more details here but the basic idea is that any HTML elements that have the class “fragment” will be incrementally shown and you can control the sequence of appearance by specifying the number for the attribute in fragment-index.\nThis is of course painful to do if you have a list! For this, there is a special case where incremental lists can be specified by class “incremental” like below:\n::: {.incremental}\n- Task A\n- Task B\n:::\nMore details on incremental list can be found here."
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#slide-names",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#slide-names",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Slide names",
    "text": "Slide names\nxaringan\nIn xaringan, you can use the name: myname to set slide names which can then be referenced in other parts of the slides by say [see here](#myname).\nQuarto revealjs\nIn Quarto revealjs, slides automatically have names that are transformed versions of the slide title (spaces replaced with -, lower cases, etc). But if you want to apply a custom name then you can pass define the attribute in the top level header of the slide:\n## Slide Title {#myname}"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#uncounted-slides",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#uncounted-slides",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Uncounted slides",
    "text": "Uncounted slides\nxaringan\nYou can use count: false to not increment the slide number for particular slides.\nQuarto revealjs\nIn Quarto revealjs, you can choose to not count the slide by setting visibility=\"uncounted\" in the top level header:\n## Slide Title {visibility=\"uncounted\"}"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#exclude-slides",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#exclude-slides",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Exclude slides",
    "text": "Exclude slides\nxaringan\nYou can use exclude: true to not increment the slide number for particular slides.\nQuarto revealjs\nIn Quarto revealjs, you can specify the attribute visibility=\"hidden\" in the top level header for the slide:\n## Slide Title {visibility=\"hidden\"}"
  },
  {
    "objectID": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#layouts-and-templates",
    "href": "posts/2022-07-11-transitioning-from-xaringan-to-quarto-revealjs/transitioning-from-xaringan-to-quarto-revealjs.html#layouts-and-templates",
    "title": "How to transition from xaringan to Quarto revealjs",
    "section": "Layouts and templates",
    "text": "Layouts and templates\nThe layout and template feature allowed you to use the same layout in subsequent slides in xaringan/remark.js. I don’t think there is an equivalent feature in Quarto revealjs for this."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "R\n\n\nexperimental design\n\n\nedibble\n\n\n\n\nCan Australians distinguish the true taste of Vegemite? Designing an experiment with sensory discrimination test using the edibble package.\n\n\n\n\n\n\nJul 30, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuarto\n\n\nxaringan\n\n\nrevealjs\n\n\nremarkjs\n\n\n\n\nThis post shows a feature in xaringan slides (powered by remark.js) that is roughly equivalent in Quarto revealjs slides.\n\n\n\n\n\n\nJul 11, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDifferent countries adopt a different system for academic ranks. This posts show a mapping of academic ranks across Australian, NZ, UK & North American systems.\n\n\n\n\n\n\nJun 30, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlife\n\n\n\n\n🎉\n\n\n\n\n\n\nApr 27, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlife\n\n\noutlier\n\n\n\n\nIt’s a tragedy when those who have talent don’t get to fully express it because of the environment.\n\n\n\n\n\n\nMar 12, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlife\n\n\n\n\nWhat good is in a war?\n\n\n\n\n\n\nMar 6, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR\n\n\nsimulate\n\n\n\n\nA proof of concept of parametric simulation framework to generate complex multivariate and multilevel data\n\n\n\n\n\n\nFeb 24, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR\n\n\ncolor\n\n\n\n\nChecking the color blind friendliness of a number of qualitative palettes.\n\n\n\n\n\n\nFeb 20, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nprogramming\n\n\n\n\nChallenges and solutions for creating functions to manipulate arrays in R when the number of dimensions is unknown.\n\n\n\n\n\n\nJan 18, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nanime\n\n\nR\n\n\n\n\nA quick exploratory analysis on the length of anime titles.\n\n\n\n\n\n\nJan 16, 2022\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexperimental design\n\n\nR\n\n\n\n\nYour analytical toolkit matters very little if the data are no good. Ideally you want to know to how the data were collected before delving into the analysis of the data; better yet, get involved before the collection of data and design its collection. In this post I explore some of the top downloaded R packages for the design of experiments and analysis of experimental data.\n\n\n\n\n\n\nFeb 3, 2021\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvisualisation\n\n\ndiagram\n\n\n\n\nSearch for the way to draw a UML sequence diagram.\n\n\n\n\n\n\nJan 29, 2021\n\n\nEmi Tanaka\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvisualisation\n\n\ninteractive\n\n\n\n\nMaking an interactive schedule heat map with interactive twitter card display.\n\n\n\n\n\n\nMar 26, 2019\n\n\nEmi Tanaka\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nfun\n\n\n\n\nMaking hexagon stickers have become popular for R-packages with the range of packages associated with RStudio, such as ggplot2, knitr, devtools and so on, having its own hex stickers. For the sticker that I made for my R-package I found it easier, partly due to its long name, to use powerpoint to manipulate the image and create a semi-circular text.\n\n\n\n\n\n\nApr 6, 2018\n\n\nEmi Tanaka\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/grammar/index.html",
    "href": "projects/grammar/index.html",
    "title": "The Grammar of Experimental Designs",
    "section": "",
    "text": "The work-in-progress can be foun here."
  },
  {
    "objectID": "projects/edibble/index.html",
    "href": "projects/edibble/index.html",
    "title": "edibble: An R-package to construct designs using the grammar of experimental designs",
    "section": "",
    "text": "install.packages(\"edibble\")\nAnd the development version on GitHub:\nremotes::install_github(\"emitanaka/edibble\")"
  },
  {
    "objectID": "projects/deggust/index.html",
    "href": "projects/deggust/index.html",
    "title": "deggust: An R-package to visualise edibble designs as ggplot graphics",
    "section": "",
    "text": "remotes::install_github(\"emitanaka/deggust\")"
  },
  {
    "objectID": "talks/2020-09-30-SSAWA-YSW2020/SSAWA-YSW2020.html",
    "href": "talks/2020-09-30-SSAWA-YSW2020/SSAWA-YSW2020.html",
    "title": "What every young statistician should know: Developing your identity, networking and marketing",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2019-11-28-WOMBAT2019/WOMBAT2019.html",
    "href": "talks/2019-11-28-WOMBAT2019/WOMBAT2019.html",
    "title": "Software design, selection and estimation for latent variable models",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2022-07-28-Ihaka/ihaka2022.html",
    "href": "talks/2022-07-28-Ihaka/ihaka2022.html",
    "title": "The genesis of experimentation",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2021-05-19-DAF/DAF2021.html",
    "href": "talks/2021-05-19-DAF/DAF2021.html",
    "title": "Constructing and visualising experimental designs with the edibble R-package",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2021-03-27-fukuokar2021/fukuokar2021.html",
    "href": "talks/2021-03-27-fukuokar2021/fukuokar2021.html",
    "title": "Visual Inference: 絵による推論",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2022-06-29-SSACanberra/ssacanberra2022.html",
    "href": "talks/2022-06-29-SSACanberra/ssacanberra2022.html",
    "title": "Current state and prospects of R-packages for the design of experiments",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2021-01-23-tokyor2021/tokyor2021.html",
    "href": "talks/2021-01-23-tokyor2021/tokyor2021.html",
    "title": "Grammar of Experimental Design: 実験計画法の「文法」",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2020-11-27-SSAWebinar2020/ssawebinar2020.html",
    "href": "talks/2020-11-27-SSAWebinar2020/ssawebinar2020.html",
    "title": "Advent of “Grammar”: Bridging Statistics and Data Science for the Design of Experiments",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2020-07-15-MonashBioinfoSeminar/MonashBioinfoSeminar2020.html",
    "href": "talks/2020-07-15-MonashBioinfoSeminar/MonashBioinfoSeminar2020.html",
    "title": "Advent of “Grammar”: Bridging Statistics and Data Science for Experimental Design",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2022-03-24-toronto2022/toronto2022.html",
    "href": "talks/2022-03-24-toronto2022/toronto2022.html",
    "title": "An anthology of experimental designs",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "talks/2020-06-30-rladiesSSA2020/rladiesSSA2020.html",
    "href": "talks/2020-06-30-rladiesSSA2020/rladiesSSA2020.html",
    "title": "Beyond Beamer: Modern and Dynamic Presentations with R Markdown",
    "section": "",
    "text": "Click here for the link to the slide."
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research Projects",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "talks.html",
    "href": "talks.html",
    "title": "Talks",
    "section": "",
    "text": "Experimental Design\n\n\n\n\nJul 28, 2022\n\n\n\n\n\n\nHost\n\n\nIhaka lecture 2022 series\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimental Design\n\n\n\n\nJun 29, 2022\n\n\n\n\n\n\nHost\n\n\nStatistical Society of Australia Canberra Branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimental Design\n\n\n\n\nMar 24, 2022\n\n\n\n\n\n\nHost\n\n\nToronto Data Workshop\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimental Design\n\n\n\n\nMay 20, 2021\n\n\n\n\n\n\nHost\n\n\nQueensland Department of Agriculture and Fisheries Biometry Workshop\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n日本語\n\n\nVisual Inference\n\n\n\n\nMar 27, 2021\n\n\n\n\n\n\nHost\n\n\n17th Fukuoka R Meeting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n日本語\n\n\nExperimental Design\n\n\n\n\nJan 23, 2021\n\n\n\n\n\n\nHost\n\n\n89th Tokyo R Meeting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimental Design\n\n\n\n\nNov 27, 2020\n\n\n\n\n\n\nHost\n\n\nStatistical Society of Australia Webinar Series\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 30, 2020\n\n\n\n\n\n\nHost\n\n\nYoung Statistician Workshop for the Statistical Society of Australia Western Australia Branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJul 15, 2020\n\n\n\n\n\n\nHost\n\n\nMonash Bioinformatics Seminar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSkill\n\n\nService\n\n\n\n\nJun 30, 2020\n\n\n\n\n\n\nHost\n\n\nStatistical Society of Australia NSW, Canberra Branches, R-Ladies Canberra, R-Ladies Sydney.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatent Variable Model\n\n\nMixed Model\n\n\n\n\nNov 29, 2019\n\n\n\n\n\n\nHost\n\n\nWOMBAT 2019.\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "emi tanaka",
    "section": "",
    "text": "Click here for the PDF version."
  },
  {
    "objectID": "posts/2022-02-20-color-considerations/color-considerations.html",
    "href": "posts/2022-02-20-color-considerations/color-considerations.html",
    "title": "Colorblind checks for qualitative palettes",
    "section": "",
    "text": "Function to generate plot for colorblind friendly check\n\n\nlibrary(ggplot2)\nlibrary(farver)\nlibrary(colorspace)\ncheck_colorblindness <- function(colors, ncol = 3, label = TRUE) {\n  ncolors <- length(colors)\n  nrow <- ceiling(ncolors / ncol)\n  cond <- c(\"Original\", \"Deutan\", \"Protan\", \"Tritan\")\n  ncond <- length(cond)\n  \n  df <- data.frame(color = c(colors, deutan(colors), protan(colors), tritan(colors)),\n                   cond = rep(cond, each = ncolors),\n                   x = rep(rep(1:ncol, length.out = ncolors), times = ncond),\n                   y = rep(rep(1:nrow, each = ncol)[1:ncolors], times = ncond)) %>% \n    mutate(cond = factor(cond, levels = .env$cond))\n  \n  \n  g <- ggplot(df, aes(x, y, fill = I(color))) +\n    geom_tile(color = \"black\", size = 1.3) +\n    theme_void() +\n    coord_equal() +\n    facet_wrap(~cond, ncol = 2) +\n    scale_y_reverse()\n  \n  if(label) {\n      g + geom_text(aes(label = color, color = I(label_col)), \n              data = function(data) data %>% \n                filter(cond == \"Original\") %>% \n                mutate(hcl = decode_colour(colors, to = \"hcl\"),\n                       label_col = ifelse(hcl[, \"l\"] > 50, \"black\", \"white\")))\n  } else {\n    g\n  } \n}"
  },
  {
    "objectID": "posts/2022-02-20-color-considerations/color-considerations.html#r-code-for-easy-copying",
    "href": "posts/2022-02-20-color-considerations/color-considerations.html#r-code-for-easy-copying",
    "title": "Colorblind checks for qualitative palettes",
    "section": "R code for easy copying",
    "text": "R code for easy copying\n\n\n### High contrast \nc(\"#FFFFFF\", \"#DDAA33\", \"#BB5566\", \"#004488\", \"#000000\")\n\n### Pale \nc(\"#BBCCEE\", \"#CCEEFF\", \"#CCDDAA\", \"#EEEEBB\", \"#FFCCCC\", \"#DDDDDD\"\n)\n\n### Dark \nc(\"#222255\", \"#225555\", \"#225522\", \"#666633\", \"#663333\", \"#555555\"\n)\n\n### Bright \nc(\"#4477AA\", \"#66CCEE\", \"#228833\", \"#CCBB44\", \"#EE6677\", \"#AA3377\", \n\"#BBBBBB\")\n\n### Vibrant \nc(\"#0077BB\", \"#33BBEE\", \"#009988\", \"#EE7733\", \"#CC3311\", \"#EE3377\", \n\"#BBBBBB\")\n\n### Medium constrast \nc(\"#FFFFFF\", \"#EECC66\", \"#EE99AA\", \"#6699CC\", \"#997700\", \"#994455\", \n\"#004488\", \"#000000\")\n\n### Okabe Ito \nc(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \n\"#CC79A7\", \"#000000\")\n\n### Light \nc(\"#77AADD\", \"#99DDFF\", \"#44BB99\", \"#BBCC33\", \"#AAAA00\", \"#EEDD88\", \n\"#EE8866\", \"#FFAABB\", \"#DDDDDD\")\n\n### Muted \nc(\"#332288\", \"#88CCEE\", \"#44AA99\", \"#117733\", \"#999933\", \"#DDCC77\", \n\"#CC6677\", \"#882255\", \"#AA4499\", \"#DDDDDD\")\n\n### Safe \nc(\"#88CCEE\", \"#CC6677\", \"#DDCC77\", \"#117733\", \"#332288\", \"#AA4499\", \n\"#44AA99\", \"#999933\", \"#882255\", \"#661100\", \"#6699CC\", \"#888888\"\n)\n\n### Monash primary \nc(blue = \"#006DAE\", black = \"#000000\", white = \"#FFFFFF\", gray80 = \"#5A5A5A\", \ngray50 = \"#969696\", gray10 = \"#E6E6E6\")\n\n### Monash secondary \nc(blue = \"#027EB6\", purple = \"#746FB2\", fuchsia = \"#9651A0\", \nruby = \"#C8008F\", pink = \"#ee64a4\", red = \"#EE0220\", orange = \"#D93F00\", \number = \"#795549\", olive = \"#6F7C4D\", green = \"#008A25\")"
  },
  {
    "objectID": "posts/2022-02-20-color-considerations/color-considerations.html#closer-look",
    "href": "posts/2022-02-20-color-considerations/color-considerations.html#closer-look",
    "title": "Colorblind checks for qualitative palettes",
    "section": "Closer look",
    "text": "Closer look\n\n\n\n\n\nHigh contrast palette: #FFFFFF, #DDAA33, #BB5566, #004488, #000000.\n\n\n\n\n\n\n\n\n\n\n\n\nPale palette: #BBCCEE, #CCEEFF, #CCDDAA, #EEEEBB, #FFCCCC, #DDDDDD.\n\n\n\n\n\n\n\n\n\n\n\n\nDark palette: #222255, #225555, #225522, #666633, #663333, #555555.\n\n\n\n\n\n\n\n\n\n\n\n\nBright palette: #4477AA, #66CCEE, #228833, #CCBB44, #EE6677, #AA3377, #BBBBBB.\n\n\n\n\n\n\n\n\n\n\n\n\nVibrant palette: #0077BB, #33BBEE, #009988, #EE7733, #CC3311, #EE3377, #BBBBBB.\n\n\n\n\n\n\n\n\n\n\n\n\nMedium constrast palette: #FFFFFF, #EECC66, #EE99AA, #6699CC, #997700, #994455, #004488, #000000.\n\n\n\n\n\n\n\n\n\n\n\n\nOkabe Ito palette: #E69F00, #56B4E9, #009E73, #F0E442, #0072B2, #D55E00, #CC79A7, #000000.\n\n\n\n\n\n\n\n\n\n\n\n\nLight palette: #77AADD, #99DDFF, #44BB99, #BBCC33, #AAAA00, #EEDD88, #EE8866, #FFAABB, #DDDDDD.\n\n\n\n\n\n\n\n\n\n\n\n\nMuted palette: #332288, #88CCEE, #44AA99, #117733, #999933, #DDCC77, #CC6677, #882255, #AA4499, #DDDDDD.\n\n\n\n\n\n\n\n\n\n\n\n\nSafe palette: #88CCEE, #CC6677, #DDCC77, #117733, #332288, #AA4499, #44AA99, #999933, #882255, #661100, #6699CC, #888888.\n\n\n\n\n\n\n\n\n\n\n\n\nMonash primary palette: #006DAE, #000000, #FFFFFF, #5A5A5A, #969696, #E6E6E6.\n\n\n\n\n\n\n\n\n\n\n\n\nMonash secondary palette: #027EB6, #746FB2, #9651A0, #C8008F, #ee64a4, #EE0220, #D93F00, #795549, #6F7C4D, #008A25."
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "",
    "text": "This blog post attempts to describe the experimental design in Williams et al. (2021) for sensory discrimination test on vegemite using the edibble R package. Detailed descriptions are provided in Williams et al. (2021) and I only provide an abridged version in this blog, except where quoted.\nFirst, I load the packages needed. The edibble package is currently only available on GitHub at https://github.com/emitanaka/edibble with plans to submit to CRAN in the next couple of months.\nThere are three types of sensory discrimination tests that are used by sensory scientists Drs Ciarán Forde and Patrick O’Riordan in an experiment to see if a story about an alternative to vegemite could sharpen the taste buds and improve the discriminative abilities of Australian consumers. The three sensory discrimination tests are as described below in Williams et al. (2021):\nThese test are abbreviated as T, PP, and M, respectively. The experimental structure is briefly summarised below:\nThe following is the experimental design description in Williams et al. (2021):"
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#test-order",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#test-order",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "Test order",
    "text": "Test order\n\nOn each day half of the consumers took the sequence of monadic tests first and the other half after either the paired preference or triangle tests.\n\nRecall:\n\nexperiment is conducted over 4 days\nlogistics allow only 42 consumers per day\ncover story (or lack there of) is shown based on the day\n\nAt first I couldn’t tell whether the cover story and the sensory tests (T and PP) were randomised or in systematic order, but in my communication with Emlyn Williams, he let me know it was randomised.\n\nset.seed(1)\ndes1 <- design(\"sensory evalution\") %>% \n  set_units(day = 4,\n            consumer = nested_in(day, 42)) %>% \n  set_trts(cover_story = c(\"yes\", \"no\"),\n           test = c(\"T,M\", \"PP,M\"),\n           test_first = c(\"T/PP\", \"M\")) %>% \n  allot_table(test:cover_story ~ day,\n                    test_first ~ consumer)\n\n\ndes1\n\n# sensory evalution \n# An edibble: 168 x 5\n         day    consumer cover_story     test test_first\n   <unit(4)> <unit(168)>    <trt(2)> <trt(2)>   <trt(2)>\n 1      day1  consumer1          yes      T,M       T/PP\n 2      day1  consumer2          yes      T,M       M   \n 3      day1  consumer3          yes      T,M       T/PP\n 4      day1  consumer4          yes      T,M       T/PP\n 5      day1  consumer5          yes      T,M       T/PP\n 6      day1  consumer6          yes      T,M       M   \n 7      day1  consumer7          yes      T,M       T/PP\n 8      day1  consumer8          yes      T,M       M   \n 9      day1  consumer9          yes      T,M       M   \n10      day1  consumer10         yes      T,M       M   \n# … with 158 more rows\n\n\nYou can check the allocation of the cover story and test by nesting it by day:\n\ndes1 %>% \n  nest_by(day, cover_story, test)\n\n# A tibble: 4 × 4\n# Rowwise:  day, cover_story, test\n        day cover_story     test               data\n  <unit(4)>    <trt(2)> <trt(2)> <list<tibble[,2]>>\n1      day1         yes     T,M            [42 × 2]\n2      day2         no      PP,M           [42 × 2]\n3      day3         yes     PP,M           [42 × 2]\n4      day4         no      T,M            [42 × 2]"
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#triangle-test",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#triangle-test",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "Triangle test",
    "text": "Triangle test\n\nFor the triangle test there are six possible triplets involving the two products (labelled N and S for normal and spiked vegemite respectively), namely: NNS, SNN, NSN, SSN, NSS and SNS. Two of these triplets were presented in sequence to each consumer and so an optimal row–column design was constructed for six treatments (triplets) in two rows (order of presentation) and 42 columns (consumers)… if the consumer received a triplet with two of the normal vegemite then the second triplet would contain two of the spiked vegemite. Separate randomisations of the design were used for 2 days.\n\nRecall:\n\neach consumer taste no more than 12 samples of vegemite\nlogistics allow only 42 consumers per day\n\nAs every consumer also does the monadic test which uses 6 samples, only 6 samples remain for the triangle test. The product lineups took me a while to figure it out – the part that tripped me up was that the two lineups (out of NNS, SNN, NSN, SSN, NSS and SNS) that was presented to the consumer sequentially had to have the major product swapped, so you can’t choose something like NNS and NSN because both lineups have the major product as N. This precludes from just two random selections from NNS, SNN, NSN, SSN, NSS and SNS, and requires a conditional randomisation.\nI decided to think of this as a two step process:\n\nchoose the main product, and\nchoose out of the sequences XXO, XOX and OXX where X denotes the major product.\n\nSince the product lineup is nested within the consumer, the major product allocation in edibble below automatically treats consumer as a block and in the assignment, it will try to ensure the major product is different in the two lineups for each consumer.\n\ndes2 <- design(\"triangle test\") %>% \n    set_units(day = c(1, 4),\n              consumer = nested_in(day, 42),\n              product_lineup = nested_in(consumer, 2)) %>% \n    set_trts(major_product = c(\"spiked\", \"normal\"),\n             sequence = c(\"XXO\", \"XOX\", \"OXX\")) %>% \n    allot_table(major_product ~ product_lineup,\n                     sequence ~ product_lineup)\n\ndes2\n\n# triangle test \n# An edibble: 168 x 5\n         day   consumer   product_lineup major_product sequence\n   <unit(2)> <unit(84)>      <unit(168)>      <trt(2)> <trt(3)>\n 1         1  consumer1 product_lineup1         normal      XOX\n 2         1  consumer1 product_lineup2         spiked      OXX\n 3         1  consumer2 product_lineup3         normal      XOX\n 4         1  consumer2 product_lineup4         spiked      OXX\n 5         1  consumer3 product_lineup5         normal      XXO\n 6         1  consumer3 product_lineup6         spiked      XOX\n 7         1  consumer4 product_lineup7         spiked      XXO\n 8         1  consumer4 product_lineup8         normal      XOX\n 9         1  consumer5 product_lineup9         normal      OXX\n10         1  consumer5 product_lineup10        spiked      XOX\n# … with 158 more rows\n\n\nI could alternatively design the above as a row-column design.\n\ndes2alt <- design(\"triangle test\") %>% \n    set_units(day = c(1, 4),\n              consumer = nested_in(day, 42),\n              order = 2,\n              product_lineup = crossed_by(consumer, order)) %>% \n    set_trts(major_product = c(\"spiked\", \"normal\"),\n             sequence = c(\"XXO\", \"XOX\", \"OXX\")) %>% \n    allot_table(major_product ~ product_lineup,\n                     sequence ~ product_lineup)\n\ndeggust::autoplot(des2alt)"
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#paired-test",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#paired-test",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "Paired test",
    "text": "Paired test\n\nFor the paired preference test the normal vegemite in a pair can be presented either first or second. Hence an optimal row–column design was constructed for two treatments (pair order) in three rows (order of presentation) and 42 columns (consumers). Separate randomisations of the design were used for 2 days.\n\n\ndes3 <- design(\"paired test\") %>% \n    set_units(day = c(2, 3),\n              consumer = nested_in(day, 42),\n              order = 3,\n              product_lineup = crossed_by(consumer, order)) %>% \n    set_trts(product_order = c(\"SN\", \"NS\")) %>% \n    allot_table(product_order ~ product_lineup)\n\ndeggust::autoplot(des3)"
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#monadic-test",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#monadic-test",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "Monadic test",
    "text": "Monadic test\n\nFor the monadic test the six samples, three of each product (normal and spiked), were presented in a different sequential order to each consumer and so there was the chance to study the possibility of carryover effects from successive samples.\n\n\ndes4 <- design(\"monadic test\") %>% \n    set_units(day = 4,\n              consumer = nested_in(day, 42),\n              order = 6,\n              product_lineup = crossed_by(consumer, order)) %>% \n    set_trts(product = c(\"spiked\", \"normal\")) %>% \n    allot_table(product ~ product_lineup)\n\noptions(deggust.nnode_max = Inf)\ndeggust::autoplot(des4)"
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#conclusion",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#conclusion",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "Conclusion",
    "text": "Conclusion\nSo you might be wondering if Australians can indeed distinguish the true taste of vegemite? Well this blog post is not about the analysis but the experimental design. A short analysis is provided, however, in Williams et al. (2021) … and the answer is yes Australians knows their vegemite 😉"
  },
  {
    "objectID": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#acknowldegement",
    "href": "posts/2022-03-27-sensory-discrimination-tests/sensory-discrimination-tests.html#acknowldegement",
    "title": "edibble experimental design with sensory discrimination tests",
    "section": "Acknowldegement",
    "text": "Acknowldegement\nI want to thank Emyln for being so prompt in answering my questions about this experiment and providing the data (which I didn’t end up using in this blog post), that was mistakenly missing in the initial publication but available now on the website."
  },
  {
    "objectID": "posts/2022-01-16-anime-titles/anime-titles.html",
    "href": "posts/2022-01-16-anime-titles/anime-titles.html",
    "title": "Are anime titles getting longer?",
    "section": "",
    "text": "Click Me\n\nto see all code in this article. You can also find the link to the source Rmd file at the footer.\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(anidb)\ntheme_set(\n  theme(panel.background = element_rect(fill = NA),\n        panel.grid = element_line(color = \"#f6e5ee\"),\n        axis.text = element_text(color = \"#79003e\"),\n        axis.line = element_line(color = \"#79003e\", size = 0.7),\n        axis.ticks.length = unit(1.4, \"mm\"),\n        axis.ticks = element_line(color = \"#79003e\", size = 0.7),\n        axis.title = element_text(color = \"#79003e\", face = \"bold\"),\n        strip.background = element_rect(color = \"#79003e\",\n                                        fill = \"#AD0059\"),\n        strip.text = element_text(color = \"white\"),\n        plot.title.position = \"plot\",\n        plot.title = element_text(color = \"#79003e\", face = \"bold\")))\n\n\n\n\ndb <- officialtitles %>% \n  mutate(ntitle = nchar(title_primary))\n\nanime_origin <- db %>% \n  count(origin) %>% \n  deframe()\n\ndbl <- db %>% \n  arrange(desc(ntitle)) %>% \n  slice(1:25)\n\n\nAniDB is a website that hosts extensive information on anime from China, Japan and Korea. There are currently information on 13,951 anime of which 91% originated from Japan.\nAs an anime lover, I’ve watched over 700 anime (which is still less than 5% in the whole database!) but one thing I noticed over recent years is that some anime titles are bizzarely long… or more like anime titles are becoming sentences. To explore this, I decided to use the anidb R-package to look at the data.\nFirst note that anime titles come in many forms. For example,\n\n“新世紀エヴァンゲリオン” is the Japanese title,\n“Shinseiki Evangelion” is the primary title (the official title in the country of origin but in romanized form), and\n“Neon Genesis Evangelion” is the English title. The English title may be unavailable if the anime is not licensed for English audiences.\n\nIn the following explorations, I use the primary title.\nFigure @ref(fig:title-length-distribution) shows that the distribution of the primary title length. We can see that most anime titles are less than 70 characters but there are some Japanese anime title that are double this length. The top 25 animes have title length greater than 92 characters.\n\n\nggplot(db, aes(ntitle)) +\n  geom_histogram(binwidth = 1, fill = \"#79003e\") +\n  labs(x = \"The length of the romanised primary anime title by county of origin\", \n       y = \"Count\") + \n  facet_grid(origin ~ ., scales = \"free_y\")\n\n\n\n\n\n\n\nTitle length of Japanese anime are right skewed.\n\n\n\n\nThe five longest titles from longest to shortest are:\n\n“Honzuki no Gekokujou: Shisho ni Naru Tame ni wa Shudan o Erande Iraremasen - Eustachius no Shitamachi Sennyuu Daisakusen / Corinna-sama no Otaku Houmon”\n“Buta no Gotoki Sanzoku ni Torawarete Shojo o Ubawareru Kyonyuu Himekishi & Onna Senshi: Zettai Chinpo Nanka ni Maketari Shinai!! The Animation”\n“Yahari Ore no Seishun LoveCome wa Machigatte Iru. Kochira to Shite mo Karera Kanojora no Yukusue ni Sachi Ookaran Koto o Negawazaru o Enai.”\n“Yuusha ni Narenakatta Ore wa Shibushibu Shuushoku o Ketsui Shimashita.: Yuusha ni Narenakatta Ore no Imouto ga Joukyou Shite Kimashita.”\n“Dungeon ni Deai o Motomeru no wa Machigatte Iru Darouka: Familia Myth - Dungeon ni Onsen o Motomeru no wa Machigatte Iru Darouka”\n\n\n\ninfo <- anime_info(as.character(dbl$aid)) %>% \n  left_join(dbl, by = \"aid\")\n\n\nBecause of AniDB’s limit on API call (multiple requests can get you banned easily – turns out that the limit is quite small; about 13-14 calls already got me banned…), I’m going to just study the top 25 anime in terms of title length.\nFigure @ref(fig:release-date) suggest that super long titles are more common in the last decade than in the past. But the analysis is only based on top 25 anime with the longest titles so it could benefit from more extensive study.\n\n\nggplot(info, aes(start_date, ntitle)) + \n  geom_point(color = \"#79003e\") + \n  labs(x = \"Start date\", y = \"Title length\")\n\n\n\n\n\n\n\nTop 25 anime in terms of title length. Looks like super long titles occur more in the last decade. Top 6 anime with the longest titles are all released after 2010."
  }
]